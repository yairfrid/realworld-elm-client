{-
   Conduit API
   Conduit API documentation

   The version of the OpenAPI document: 1.0.0

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.Comments exposing
    ( createArticleComment
    , deleteArticleComment
    , getArticleComments
    )

import Api
import Api.Data
import Dict
import Http
import Json.Decode
import Json.Encode



{-| Create a comment for an article. Auth is required
-}
createArticleComment : String -> Api.Data.CreateArticleCommentRequest -> Api.Request Api.Data.CreateArticleComment200Response
createArticleComment slug_path comment_body =
    Api.request
        "POST"
        "/articles/{slug}/comments"
        [ ( "slug", identity slug_path ) ]
        []
        []
        (Just (Api.Data.encodeCreateArticleCommentRequest comment_body))
        Api.Data.createArticleComment200ResponseDecoder



{-| Delete a comment for an article. Auth is required
-}
deleteArticleComment : String -> Int -> Api.Request ()
deleteArticleComment slug_path id_path =
    Api.request
        "DELETE"
        "/articles/{slug}/comments/{id}"
        [ ( "slug", identity slug_path ), ( "id", String.fromInt id_path ) ]
        []
        []
        Nothing
        (Json.Decode.succeed ())



{-| Get the comments for an article. Auth is optional
-}
getArticleComments : String -> Api.Request Api.Data.GetArticleComments200Response
getArticleComments slug_path =
    Api.request
        "GET"
        "/articles/{slug}/comments"
        [ ( "slug", identity slug_path ) ]
        []
        []
        Nothing
        Api.Data.getArticleComments200ResponseDecoder
